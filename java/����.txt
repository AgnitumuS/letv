**********************************************
基础
1.扩展赋值自带强制转换。
2.+一边为字符串则进行字符串链接：
	""+100+200 输出 100200
	100+200+"" 输出 300 
3.变量的作用范围
	从变量的声明开始，到包含它的最近的大括号结束；
4.变量重名问题
	作用域重叠时，变量不能重名
5.数字交换规则：追尾并绕圈
6.循环三要素：
	1）循环变量的初始化
	2）循环条件（以循环变量为基础）
	3）循环的的改变（向着循环的结束变）
 	1 、3一样用do while
7.数组定义
8.数组冒泡排序
9.质数开关 并非一次判断就能得出结果的使用开关
10.程序=算法+数据结构
11.数组的复制
12.猜字母游戏
*********************************************
面向对象

向上造型:
  1)父类型的引用指向子类的对象
  2)能点出来什么，看引用的类型
重写方法时方法名和参数列表必须相同
/*
 * 重写需要遵循"两同两小一大"原则:一般都是一模一样的
 * 1.两同:
 *   1)方法名称相同
 *   2)参数列表相同
 * 2.两小:
 *   1)子类方法的返回值类型小于或等于父类的
 *     1.1)void和基本类型时，必须相同
 *     1.2)引用类型时，小于或等于
 *   2)子类方法抛出的异常小于或等于父类的-------异常
 * 3.一大:
 *   1)子类方法的访问权限大于或等于父类的----访问修饰符

接口interface可以继承多个接口
interface 内部方法如果不写访问修饰符，默认加上public ，注意子类重写访问修饰必须大于等于
****************************************************
oracle 
分页查询
	select b.*
	from
		(select  rownum rn ,a.*
			from (select * from emp order by sal desc) a
			where rn<end;
		) b
	where b.rn>start



************************************************
web
加载CSS、JS文件
<link rel="stylesheet" href="x.css">
<script src="x.js"></script>
***********************************************
jQuery 
将DOM转换为jQuery对象 $(DOM)
将jQuery转换为DOM jQuery.get(index)/jQuery[index]

******************************************
servlet
设计模式：
迭代器 map集合遍历 JDBC ResultSet 接收消息头 Enumeration 
servlet 单例模式
线程安全问题：
**  jvm以栈帧为单位保存线程的运行状态。每当启动一个新线程, 
    的时候 java虚拟机都会为它分配一个java栈。虚拟机只会对
    java栈执行两种操作：以栈帧为单位的压栈或者出栈。也就是说个数由线程的上线决定。
    还有就是栈帧由三部分组成的，局部变量区，操作数栈和帧数据区。
    局部变量区和操作数栈要视对应的方法而定，它们是按照字长计算的。
1.局部变量存入栈内。
2.每个线程有不同的栈帧。
3。不同的线程数据是分开的
无线程安全问题。
1.成员变量存入堆中
2.堆中该数据只有一份
3.不同线程同时修改这一份数据有线程安全问题。


MVC是经典的设计模式，是代码的分层思想：
1.Model：业务层，用来处理业务。
2.view：视图层，用来显示数据
3.Controller：控制层，负责控制流程，是M和V的桥梁。
其目的是要降低代码之间的耦合度，便于团队开发和维护。


转发和重定向
转发的特点：
1.一次请求
2.地址不变
3.使用同一个request，可以通过他共享资源
4.不可以转发到外部资源

重定向：

1.二次请求
2.地址改变
3.使用2个request，不能通过他共享数据。
4.可以重定向到项目外部的资源。

Servlet路径:

    req.getContextPath()       获取项目名         /Servlet4
    req.getServletPath()	获取网名		 /*.duang
    req.getRequestURI()		获取绝对路径	 /Servlet4/*.duang
    req.getRequestURL()		获取完整路径	 http://localhost:8080/Servlet4/*.duang
	


***********************************************
Spring 
Spring web mvc
#五大组件
1.DispatcherServlet(前段控制器) -----mainservlet
2.HandlerMapping()-----if()
3.Controller(处理器)-----方法（）
4.ModelAndView-----方法返回值
5.ViewResolver（视图解析器）------根据返回的view调用相应的视图对象（jsp）展现结果
说明：
step1.前端控制器收到请求后，依据HandlerMapping的配置，
调用相应的Controller来处理。
step2.Controller(处理器)将处理结果封装成ModelAndView对象，
返回给前段控制器。注：ModelAndView对象里面通常包含两部分信息
（处理结果和视图名，视图名是一个字符串，需要由视图解析器解析 成相应的视图对象，比如一个jsp）
step3. 前端控制器依据视图解析器的解析，调用相应的视图对象（比如是 一个jsp）来对处理结果进行展现。

*************************************************
ajax
ajax:是一种改善用户体验的技术，其实质是使用XMLHttpRequest对象异步的向服务器发
送请求

**********************************
反射 

*处理注解采用反射技术（使用反射API在运行期间处理注解）


加载类 Class.forName
Class cls=Class.forName(className);
创建类的对象 newInstance()
Object obj =cls.newInstance();
获取类中的方法信息 getDeclareMethods()
Method[] methods=class.getDeclareMethods();
使用反射API调用方法（注意m必须为对象真实存在的方法）
Method m   m.invoke(对象，参数列表)=返回值为方法的返回值
