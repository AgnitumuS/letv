回顾:
1.运算符:
  1)算术:+-*/%,++,--
  2)关系:>,<,>=,<=,==,!=  boolean
  3)逻辑:&&,||,!  boolean
  4)赋值:=,+=,-=,*=,/=,%=
  5)字符串拼接:+
  6)三目/条件: boolean?数1:数2
2.分支结构:有条件的执行某语句，并非每句必走
  1)if:1
  2)if...else:2
  3)if...else if:多
  4)switch...case:多
    优点:效率高、结构清晰
    缺点:整数、相等
    break:跳出switch



System.out.println("请输入两个数:");
int a = scan.nextInt();
int b = scan.nextInt();

5
6
5 6
5     6

int a=8,b=55; //升序(a=5,b=8)
if(a>b){
  int t=a; //t=8
  a=b;     //a=5
  b=t;     //b=8  追尾并绕圈
}
若a>b则交换，保证a<b


int a=8,b=1,c=4,d=2; //a=1,b=4,c=8
若a>b则换，保证a<b
若a>c则换，保证a<c
若a>d则换，保证a<d
若b>c则换，保证b<c
若b>d则换，保证b<d
若c>d则换，保证c<d



1/3/5/7/8/10/12---------31天
4/6/9/11----------------30天
2-----------------------28天/29天





笔记:
1.循环:反复执行一段相同或相似的代码
2.循环三要素:
  1)循环变量的初始化
  2)循环的条件(以循环变量为基础)
  3)循环变量的改变(向着循环的结束变)
  循环变量:在循环过程中所改变的那个量
3.循环结构:
  1)while结构:先判断后执行，有可能一次都不执行
  2)do...while结构:先执行一次后判断，至少执行一次
                   第1要素与第3要素相同时，首选
  3)for结构:应用率最高
4.break:跳出循环
  continue:跳过循环体中剩余语句而进入下一次循环


任务:
1.while版猜数字、do...while版猜数字、随机加法运算器
  至少重做一次
2.课后作业(第9题只要最终结果)
    sum=11111111100
    sum=3.3182....9937





















Math.random()-------------0.0到0.9999999....
*100----------------------0.0到99.999999....
(int)---------------------0到99









int score=0; //得分
for(int i=1;i<=10;i++){ //循环10次
  //出题
  //答题
  //判题
}
System.out.println("score="+score);

0到99

(1)25+1=?
算吧!
26
答对了

(2)22+55=?
算吧!
76
答错了

(3)48+9=?
算吧!
57
答对了

...
(10)24+90=?
算吧!
124
答错了

总得分为:20


















int count=0; //1
while(count<10){ //2
  System.out.println("行动是成功的阶梯"); //4
  count++; //3
}
System.out.println("over");

12432432432432432432
12432432432432432432




//   1              2           3
for(int count=0 ; count<10 ; count++){
  System.out.println("行动是成功的阶梯"); //4
}
System.out.println("over");

12432432432432432432











for(要素1 ; 要素2 ; 要素3){
  语句块
}















int a = 固定的值;
int a = 用户输入的值;
int a = 随机生成的值;

生成1到1000之内的随机数










Math.random()-------------0.0到0.99999999999....
*1000---------------------0.0到999.999999999....
(int)---------------------0到999
+1------------------------1到1000











Math.random()-------------0.0到0.99999999999....
*1000---------------------0.0到999.999999999....
+1------------------------1.0到1000.99999999....
(int)---------------------1到1000










int num = 250; //藏起来的那个数

循环变量:猜的那个数guess
1)System.out.println("猜吧!");
  int guess = scan.nextInt();
2)guess!=num
3)System.out.println("猜吧!");
  guess = scan.nextInt();

Guessing

猜吧!
300
太大了

猜吧!
200
太小了

猜吧!
251
太大了

猜吧!
250
恭喜你，猜对了


















int x=0;
while(x<10){
  if(x==5){
    break; //跳出switch
  }
  System.out.println(x);
  x++;
}

WhileDemo




循环变量:圈数count
1)int count=0;
2)count<3
3)count++;

                     圈数为0
够3圈吗? 不够 跑一圈 圈数为1
够3圈吗? 不够 跑一圈 圈数为2
够3圈吗? 不够 跑一圈 圈数为3
够3圈吗? 够了



循环变量:份数times
1)int times=0;
2)times<10
3)times++;


                         份数为0
够10份吗? 不够 打印一份 份数为1
够10份吗? 不够 打印一份 份数为2
够10份吗? 不够 打印一份 份数为3
够10份吗? 不够 打印一份 份数为4
够10份吗? 不够 打印一份 份数为5
够10份吗? 不够 打印一份 份数为6
够10份吗? 不够 打印一份 份数为7
够10份吗? 不够 打印一份 份数为8
够10份吗? 不够 打印一份 份数为9
够10份吗? 不够 打印一份 份数为10
够10份吗? 够了















循环变量:次数times
1)int times=0;
2)times<10
3)times++;



案例1: 输出10次"行动是成功的阶梯"
         行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯
	 行动是成功的阶梯


循环变量:乘数num
1)int num=1;
2)num<=9
3)num++;


案例2: 输出9的乘法表
         1*9=9
	 2*9=18
	 3*9=27
	 4*9=36
	 5*9=45
	 6*9=54
	 7*9=63
	 8*9=72
	 9*9=81










1)顺序:从上往下逐行执行，每句必走
2)分支:有条件的执行某语句一次，并非每句必走
3)循环:有条件的执行某语句多次，并非每句必走


while(boolean){ //循环结构
  语句块/循环体----反复干的那个事
}
System.out.println("over");


if(boolean){ //分支结构
  语句块
}
System.out.println("over");





