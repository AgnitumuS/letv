#TS FOR LETV. Directive try_files maybe used here.
location ~ ^/m3u8/(.*)\.ts$ {
    root /livemem/live;
    expires 3h;

    set $ua_ok 0;
    if ( $http_user_agent ~* "owninneragent") {
        set $ua_ok 1;
    }

    if ($uri ~* liverecord_) {
        set $ua_ok 1;
    }

    if ($ua_ok = 0) {
        return 405;
    }

    error_page 404 = @LIVE_NOT_CACHE_TS;
  #try_files /livemem/live$uri /letv/fet/live$uri @live_data_not_found;
}

location @LIVE_NOT_CACHE_TS {
	root /letv/fet/live;
	error_page 404 = @live_data_not_found;
}



location @live_data_not_found {
    proxy_http_version    1.1;
    proxy_set_header Connection "";
    proxy_pass http://live_backend;
}


#M3U8 FOR LETV.
location ~ ^/m3u8/(.*)\.m3u8$ {
    root /livemem/live;

    if ($arg_playid ~ "2"){
        return 403;
    }

    m3u8_backup_root /letv/fet/live;
    error_page 404 = @live_m3u8_not_found;
    error_page 500 = @live_m3u8_not_found;
    error_page 411 = @vod_m3u8_not_found;

    m3u8_expire_time 0;
    set $ua_ok 0;

    if ( $http_user_agent ~* "owninneragent") {
        set $ua_ok 1;
    }

    if ($request_uri ~ ^/m3u8/lb_jsdx(.*)\.m3u8) {
        set $ua_ok 1;
    }

    if ($ua_ok = 0) {
        return 405;
    }

    if ($arg_ver ~* live_2) {
        return 411;
    }

    if ($arg_ver ~* "live_3") {
        return 411;
    }
  
    set $trim_args $args;

    if ($args ~* "(.*)&abtimeshift=.*?(&.*)?$") {
        set $trim_args $1$2;
    }

    if ($trim_args ~* "(.*)&timeshift=.*?(&.*)?$") {
        set $trim_args $1$2;
    }
 
    set $xdelay "1";

    if ($args ~ "delaytime") {
        set $xdelay "0";
    }

    if ($args !~ "timeshift") {
        set $xdelay "0";
    }

    if ($m3u8_delaytime ~ "delaytime") {
        set $xdelay "${xdelay}1";
    }

    if ($xdelay = "11") {
        proxy_pass http://127.0.0.1$uri?$m3u8_delaytime&$trim_args;
        break;
    }

    if ($args ~* abtimeshift) {
         rewrite ^/(.*)\/desc\.m3u8$ /NAME/$1/$abshifttimeuri last;
    }
	#111
	set $is_lunbo_produce "0";
	
    if ($args ~* timeshift) {
		set $is_lunbo_produce "1";
    }
	#11
	if ($arg_timeshift = "0") {
		set $is_lunbo_produce "${is_lunbo_produce}1";
	}
	
	# timeshift != 0
	if ($is_lunbo_produce = "1") {
		rewrite ^/(.*)\/desc\.m3u8$ /NAME/$1/$shifttimeuri last;
	}

	# 0 11
	if ($arg_server_name = "lunbo_produce") {
		set $is_lunbo_produce "${is_lunbo_produce}1";
	}
	
	#0   no timeshift no server_name
	#01  no timeshift have server name
	#111 timeshift = 0 have server_name
	#11  timeshift = 0 no server_name
	if ($is_lunbo_produce = "11") {
		rewrite ^/(.*)\/desc\.m3u8$ /NAME/$1/$shifttimeuri last;
	}
	
    if ($arg_path = "0") {
         m3u8_expire_time 604800;
    }

    if ($arg_path = "") {
         m3u8_expire_time 604800;
    }
	#ignore check mtime
    m3u8_desc_expire_time 0;
    m3u8_gen;
}


location ~ ^/NAME/m3u8/(.*)\.m3u8$ {
    root /livemem/live;
    m3u8_backup_root /letv/fet/live;

    error_page 404 = @live_m3u8_not_found;
    error_page 500 = @live_m3u8_not_found;
    rewrite ^/NAME/(.*)$ /$1;

    set $ua_ok 0;

    if ( $http_user_agent ~* "owninneragent") {
        set $ua_ok 1;
    }

    if ($request_uri ~ ^/m3u8/lb_jsdx(.*)\.m3u8) {
        set $ua_ok 1;
    }

    if ($ua_ok = 0) {
        return 405;
    }

    m3u8_expire_time 0;
    max_slice 3;
    if ($arg_path = "0") {
        m3u8_expire_time 604800;
    }

    if ($arg_path = "") {
        m3u8_expire_time 604800;
    }

    m3u8_timeshift_gen;
    break;
}

#Maybe obsolete now.
location @live_m3u8_not_found {
    error_page 410 = @LIVE_M3U8_LOCAL_NOT_FOUND;

    if ($broadcast_proxy_ip != "") {
        return 410;
    }

    return 404;
}

location @LIVE_M3U8_LOCAL_NOT_FOUND {
    root /letv/fet/live;
    proxy_intercept_errors on;

    proxy_store_access user:rw group:rw all:rw;
    proxy_connect_timeout 4s;
    proxy_send_timeout    4s;
    proxy_read_timeout    4s;
    proxy_pass http://$broadcast_proxy_ip$broadcast_timeshift_uri?$broadcast_proxy_args;
}


location @vod_m3u8_not_found {
    error_page 411 = @vod_local_not_30000_found;
    error_page 412 = @vod_remote_not_found;
    if ($arg_path = "") {
        return 411;
    }

    if ($arg_path = "0") {
        return 411;
    }
    return 412;
}

location @vod_local_not_30000_found {
     proxy_store off;
     proxy_set_header Ts-Url-Sec-Params "ntm=$arg_ntm;keyitem=$arg_keyitem;nkey=$arg_nkey;key=$arg_key;nkey2=$arg_nkey2";
     proxy_connect_timeout 2s;
     proxy_send_timeout    2s;
     proxy_read_timeout    2s;
     proxy_http_version 1.1;
     proxy_set_header Connection "";

     proxy_pass http://lunbo_backend;
}

location @vod_remote_not_found {
     proxy_store off;
     proxy_connect_timeout 2s;
     proxy_send_timeout    2s;
     proxy_read_timeout    2s;
     proxy_pass http://$broadcast_proxy_ip$uri?$broadcast_proxy_args;
}



#For Lecloud

location ~ ^/live/hls/(.*)\.ts$ {
    error_page 404 = @CLOUD_LIVE_NOT_CACHE;
    rewrite ^/live/hls/(.*) /m3u8/$1 break;
	#try_files /livemem/live$uri /letv/fet/live$uri @LIVE_404_LOCATION;
    expires  7d;
    root /livemem/live;
}

location @CLOUD_LIVE_NOT_CACHE {
	root /letv/fet/live;
	error_page 404 = @LIVE_404_LOCATION;
}

location @LIVE_404_LOCATION {
    proxy_connect_timeout 15s;
    proxy_send_timeout    45s;
    proxy_read_timeout    45s;
    proxy_http_version    1.1;
    proxy_set_header Connection "";
    proxy_pass http://live_backend;
}

location ~ ^/live/hls/(.*)$ {
    set $delay_args $args;
    set $trim_args $args;
    proxy_set_header If-Modified-Since "";

    if ($args ~* "(.*)abtimeshift=.*?(&.*)?$") {
        set $trim_args $1$2;
    }

    if ($trim_args ~* "(.*)timeshift=.*?(&.*)?$") {
        set $trim_args $1$2;
    }

    rewrite ^/live/hls/(.*) /live/m3u8/$1 break;
    add_header CC http://127.0.0.1$uri?$m3u8_delaytime&$trim_args;
    proxy_pass http://127.0.0.1$uri?$m3u8_delaytime&$trim_args;
}

location ~ ^/live/m3u8/(.*)$  {
    root /livemem/live;
    m3u8_backup_root /letv/fet/live;
    m3u8_expire_time 604800;
    default_type application/x-mpegURL;
    add_header Safe-Info $m3u8_secret;

    if ($args ~* abtimeshift) {
        rewrite ^/(.*)\/desc\.m3u8$ /ABNAME/$1/$abshifttimeuri last;
    }

    if ($args ~* timeshift) {
        rewrite ^/(.*)\/desc\.m3u8$ /NAME/$1/$shifttimeuri last;
    }
	rewrite /live/(.*) /$1 break;
	m3u8_desc_expire_time 60;
    m3u8_gen;
}

location ~ ^/NAME/live/m3u8/(.*)\.m3u8$ {
    root /livemem/live;
    m3u8_backup_root /letv/fet/live;
    max_slice 3;
    m3u8_expire_time 604800;
    rewrite ^/NAME/live/m3u8/(.*)$ /m3u8/$1 break;

    m3u8_timeshift_gen;
}

location ~ ^/ABNAME/live/m3u8/(.*)\.m3u8$ {
    root /livemem/live;
    m3u8_backup_root /letv/fet/live;
    expires 3s;
    expires_m3u8 300s;
    max_slice 3;
    m3u8_expire_time 604800;
    rewrite ^/ABNAME/live/m3u8/(.*)$ /m3u8/$1 break;

    m3u8_timeshift_gen;
}

#############
###hbtv live
#############

location ~ ^/leflv/(.*)\.flv$ {
    root /letv/fet/live;
    expires 1d;
}

location ~ ^/leflv/(.*)/desc\.xml$ {
    content_by_lua_file  conf/lua/live_xml.lua;
}

location ~ ^/leflv/(.*)\.dat$ {
    root /letv/fet/live;
    expires 1d;
}

location ~ ^/leflv/(.*)\.header$ {
    root /letv/fet/live;
    expires 1d;
}


location ~ .*\.php$ {
    root /usr/local/nginx/html;
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
    include fastcgi_params;
}


location ~  ^/live/rtmp/(.*)\.bin {
    set $stream_id $1;
    set $rtmp_port $arg_rtmp_port;
    proxy_method POST;
    set $xuri "";
    proxy_set_body '{"command":"captureStream","streamId":"$stream_id"}';
    proxy_pass http://127.0.0.1:$rtmp_port;
}

location ~  ^/live/rtmp/(.*) {
    expires 10s;
    set $stream_id $1;
    set $rtmp_port $arg_rtmp_port;
    rtmp_es /rtmp_snapimg;
    es_snapimg;
}

location = /rtmp_snapimg {
    proxy_method POST;
    proxy_buffer_size 10m;
    proxy_buffers 2 10m;
    proxy_busy_buffers_size 10m;
    set $xuri "";
    proxy_set_body '{"command":"captureStream","streamId":"$stream_id"}';
    proxy_pass http://127.0.0.1:$rtmp_port;
}

location /gslb/buddy/group{
    proxy_pass http://gslb_slave_backend;
}

