#!/bin/bash

PATH=/usr/local/jdk1.6.0_33/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin

clear

restart_nginx() {
	echo "################################################################"
	echo "                  You will restart nginx"
	echo "################################################################"
	while `ps aux |grep '/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf' |grep -qv grep `
	do
		killall -9 nginx
		sleep 2
	done

	ldconfig >/dev/null 2>&1
	sleep 2
        /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf
	sleep 2
	echo
	echo ">>>>>>>>>>>>>>>>>>>>>>The nginx process<<<<<<<<<<<<<<<<<<<<<<<<"
	ps aux |grep nginx |head

	if [ $? -ne 0 ]
	then
	echo
	echo "****************nginx restart error******************"
	echo
	fi

	echo ">>>>>>>>>>>>>>>>>>>>>>The nginx process<<<<<<<<<<<<<<<<<<<<<<<<"
	echo
	sleep 2
	
}

reload_nginx(){
        echo "################################################################"
        echo "                  You will reload nginx"
        echo "################################################################"
	ldconfig >/dev/null 2>&1
        sleep 2
        /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf -s reload
        sleep 2
        echo
	echo ">>>>>>>>>>>>>>>>>>>>>>The nginx process<<<<<<<<<<<<<<<<<<<<<<<<"
        ps aux |grep nginx |head |grep -v grep  

        if [ $? -ne 0 ]
        then
	echo
        echo "****************nginx restart error******************"
	echo
        fi

	echo ">>>>>>>>>>>>>>>>>>>>>>The nginx process  <<<<<<<<<<<<<<<<<<<<<<"
        echo
        sleep 2
}

stop_nginx(){
        echo "################################################################"
        echo "                  You will stop nginx"
        echo "################################################################"
        while `ps aux |grep '/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf' |grep -qv grep `
        do
                killall -9 nginx
                sleep 2
        done
        ps aux |grep nginx |head | grep -v grep

        if [ $? -eq 0 ]
        then
	echo
        echo "**********************nginx is still run************************"
	echo
	else
	echo
        echo "**********************Stop nginx is done************************"
	echo
        fi
	
}

resart_watchdog(){
        echo "################################################################"
        echo "                  You will restart watchdog"
        echo "################################################################"
        while `ps aux |grep '/usr/local/sbin/watchdog' |grep -qv grep `
        do
                killall -9 watchdog 
                sleep 2
        done

	ldconfig >/dev/null 2>&1
        sleep 2
        /usr/local/sbin/watchdog
        sleep 2
        echo
        echo ">>>>>>>>>>>>>>>>>>>>>The watchdog process<<<<<<<<<<<<<<<<<<<<<<"
        ps aux |grep '/usr/local/sbin/watchdog' |head

        if [ $? -ne 0 ]
        then
	echo
        echo "**********************watchdog restart error**********************"
	echo
        fi

        echo ">>>>>>>>>>>>>>>>>>>>>The watchdog process<<<<<<<<<<<<<<<<<<<<<<"
        echo
        sleep 2
}

stop_watchdog(){
        echo "################################################################"
        echo "                  You will stop watchdog"
        echo "################################################################"
        while `ps aux |grep '/usr/local/sbin/watchdog' |grep -qv grep `
        do
                killall -9 watchdog 
                sleep 2
        done
        ps aux |grep '/usr/local/sbin/watchdog'|head | grep -v grep

        if [ $? -eq 0 ]
        then
	echo
        echo "**********************watchdog is still run**********************"
	echo
	else
	echo
        echo "**********************Stop watchdog is done**********************"
	echo
        fi
}
run_puppet(){
        echo "################################################################"
        echo "                  You will run puppet"
        echo "################################################################"
       service puppetd stop
       sleep 1
       killall -9 puppetd
       sleep 1
       killall -9 puppetd
       rm -rf /var/run/puppet/agent.pid
       service puppetd start
       if [ -f  /var/lib/puppet/state/puppetdlock ]
       then
               rm -rf /var/lib/puppet/state/puppetdlock
       fi
       puppetd --test --server puppet.oss.letv.com
}
useage(){
        echo "==================================================================="
        echo "                              Usage "
        echo "==================================================================="
        echo "Press 1 use to restart_nginx        (killall -9 nginx; and start)"
        echo "Press 2 use to reload_nginx         (-s reload)"
        echo "Press 3 use to stop_nginx           (killall -9 nginx)"
        echo "Press 4 use to resart_watchdog      (killall -9 watchdog;and start)"
        echo "Press 5 use to stop_watchdog        (killall -9 watchdog)"
        echo "Press 9 use to 1+4"
        echo "Press 0 use to 3+5"
	echo "Press 8 use to run puppet"
        echo "==================================================================="

}

useage
read -p "Enter the job code :" job_code
case  $job_code in 
	"1")
	restart_nginx
	;;

	"2")
	reload_nginx
	;;

	"3")
	stop_nginx
	;;

	"4")
	resart_watchdog
	;;

	"5")
	stop_watchdog
	;;

	"0")
        stop_nginx
        stop_watchdog
	;;

	"9")
        restart_nginx
        resart_watchdog
	;;
       "8")
       run_puppet
       ;;
	
	*)
	useage	
	;;
esac
