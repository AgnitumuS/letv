user  root;

#error_log  /dev/null  error;
error_log  logs/error.log  error;
pid        logs/nginx.pid;

worker_rlimit_nofile   32768;
worker_processes  24;
worker_rlimit_core 4096000000;
working_directory /tmp;

events {
    worker_connections  65536;
    accept_mutex on;
}


#include /usr/local/nginx/conf/letv/rtmp_r2h.conf;
http {
    include letv/blackhole.conf; 
    include mime.types;
    include /usr/local/etc/hosts.conf;
    include /usr/local/etc/qos_check.conf;
    default_type  application/octet-stream;

    more_set_headers  "Server: LeCloud Cache V2.43";

    variables_hash_max_size 512;
    server_names_hash_max_size 30000;
    variables_hash_bucket_size 10240;
    server_names_hash_bucket_size 256;

    recursive_error_pages on;
    resolver 127.0.0.1;

    client_max_body_size 4m;
    client_body_buffer_size 4m;

    gzip  off;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types *;

    root /letv/fet;
    log_not_found off;

    proxy_http_version  1.1;
    proxy_set_header  Host  $http_host;
    proxy_connect_timeout 5s;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_max_temp_file_size 0;
    proxy_intercept_errors on;

    lua_socket_connect_timeout 5s;
    lua_socket_send_timeout 60s;
    lua_socket_read_timeout 60s;

    lua_package_path  "/usr/local/nginx/conf/lualib/?.lua;/usr/local/nginx/conf/lua_phase/mod_?.lua;;";
    lua_package_cpath "/usr/local/nginx/conf/lualib/?.so;;";

    mp4_max_buffer_size  15m;

    hls_streamid_zone zone=streamid_zone:1m;
    save_args_shm_zone zone=save_args_zone:5m expire=5h;
		
    log_format letv_log '$server_addr:$server_port $remote_addr [$time_local] "$request" $status $body_bytes_sent $request_time "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" $rehost - $pid $http_range $proxyed $sent_http_content_length [$time_local] '
                        '[$time_local] [$time_local] [$time_local] - - - - - $bytes_sent $bytes_sent $secure_link_v2_log "$upstream_http_via" "$log_location"';

    log_format letvcdnclive '$server_addr:$server_port $remote_addr [$time_local] "$request" $status $body_bytes_sent $request_time "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" $clive_host - $pid $http_range $proxyed $sent_http_content_length [$time_local] '
                            '[$time_local] [$time_local] [$time_local] - - - - - $bytes_sent $bytes_sent $secure_link_v2_log "$upstream_http_via" "-"';

    log_format cdn_log   '"$server_addr:$server_port" "$remote_addr" "$time_local" "$request" "$status" "$body_bytes_sent" "$bytes_sent" "$sent_http_content_length" '
                         '"$proxyed" "$http_host" "$http_user_agent" "$http_referer" "$http_range" "-" "$request_time" "0" "$upstream_http_le_status" "-" "-" "-" '
                         '"$upstream_connect_time" "$upstream_header_time" "$upstream_response_time" "$upstream_addr" "$http_x_forwarded_for" "$upstream_http_via" "$bill_status" "$connection"';

    log_format lecloud_log '"NEWCDN" "$server_addr:$server_port" "$remote_addr" "[$time_local]" "$request_method $scheme://$http_host$request_uri $server_protocol" '
                           '"$status" "$body_bytes_sent" "$bytes_sent" "$sent_http_content_length" "$upstream_http_le_status" "$host" "$http_user_agent" "$http_referer" "$http_range" '
                           '"$request_time" "$upstream_http_via" "$http_x_forwarded_for" "$x_real_host" "$upstream_addr" "$bill_status" "$upstream_response_time" '
                           '"$upstream_header_time" "$upstream_connect_time"';


    access_log  syslog:server=127.0.0.1:8012,facility=local7,tag=3rd_letv_nginx,severity=info letv_log;
    access_log  syslog:server=127.0.0.1:8121,facility=local7,tag=cdn_log_nginx,severity=info cdn_log;
    
    limit_conn_zone $binary_remote_addr zone=muzhiwan_limit:10m;

    sendfile        on;
    keepalive_timeout  65;

    #lua_code_cache off;
    lua_shared_dict status_report   1m;
    lua_shared_dict ups_config      50m;
    lua_shared_dict r2h_report      10m;
    lua_shared_dict hls_report      10m;
    lua_shared_dict hls_report_stat 10m;
    lua_shared_dict flv_auth_cache  10m;
    lua_shared_dict live_gslb_cache 5m;
    lua_shared_dict gslb_cache 30m;
    lua_shared_dict hntv_report 100m;

    lua_max_pending_timers 4096;
    lua_max_running_timers 4096;

    init_worker_by_lua_file conf/lua/init_worker.lua;
    init_by_lua_file        conf/app/init_cache.lua;

    upstream play.api.live.lecloud.com {
        server play.api.live.lecloud.com;
        keepalive 5;
    }


    upstream live_backend {
        server 0.0.0.1;
        balancer_by_lua_block {
            local balancer = require "ngx.balancer"

            if ngx.var.broadcast_proxy_ip then
                balancer.set_current_peer(ngx.var.broadcast_proxy_ip, 80)
            end
            return
        }
        keepalive 50;
    }


    upstream ats_backend {
        server 127.0.0.1:18980;
       
        keepalive 500;
    }

    upstream ngx_backend {
        server 127.0.0.1;

        keepalive 500;
    }

    server {
        listen         80 default;
        listen         8080;
        listen         110;
        listen         1755;
        server_name    localhost;

        set $rehost $host;
        set $proxyed "-";
        set $secure_link_v2_log "-";
        set $log_location "-";
        set $var_acao_hdr "";

        if ($arg_ajax = "1") {
            set $var_acao_hdr "*";
        }

        more_set_headers "Access-Control-Allow-Origin: $var_acao_hdr";

        proxy_connect_timeout 10;
        proxy_read_timeout    10;
        proxy_send_timeout    10;
        video_path  /letv/fet;
        video_length 10;
        m3u8_path   /letv/fet;

        include g3/location_*.conf;
        include letv/live.conf;
      	include domains/coopcdn.conf;
        include letv/credirect.conf;

        light_blacklist max=100 inactive=30s fail_count=100 expire=2m unsent_scale=95;

        location ~ ^/downfile {

        }

        location = /rtmp_connection {
            content_by_lua_file conf/lua/rtmp_connection.lua;
        }

        location = /snmpband {
            content_by_lua_file conf/lua/snmpband.lua;
        }

        location = /local_ips {
            set $local_ips_var $local_ips;
            content_by_lua_file conf/lua/local_ips.lua;
        }

       location = /api/ups_config {
           lua_need_request_body on;
           client_max_body_size 50k;
           client_body_buffer_size 50k;
           content_by_lua_file conf/app/ups_config.lua;
       }

        location ~ ^/[0-9]+/[0-9]+/[0-9]+/changba/(.*)$ {
            include letv/security.conf;
            error_page 404 = @404_NOT_FOUND;
        }


        location ~ ^/[0-9]+/[0-9]+/[0-9]+/cibntv/(.*)\.m3u8$ {
            include letv/security.conf;
            error_page 401 = @CNTV_DOWNLOAD;

            if ($arg_tag = "watchdog") {
                return 401;
            }

            set $cibntv_replace_host "ls.hls.ott.cibntv.net";

            if ($arg_tag = "cibntvletv1") {
                set $cibntv_replace_host "cibntv.gslb.letv.com";
            }

            if ($arg_tag = "cibntvletv2") {
                set $cibntv_replace_host "letv.hls.ott.cibntv.net";
            }

            if ($arg_tag = "cibntvpay") {
                set $cibntv_replace_host "ls.hls.ott.cibntv.net";
            }

            sub_filter_once off;
            sub_filter hls01.ott.disp.cibntv.net $cibntv_replace_host;
            sub_filter_types */* application/octet-stream;
            error_page 404 = @404_NOT_FOUND;
        }

        location @CNTV_DOWNLOAD {
            error_page 404 = @404_NOT_FOUND;
        }

        location ~* ^(.*_letv_drm)/stream.m3u8 {
            root /letv/fet;
            error_page 404 = @404_NOT_FOUND;
            set $ts_uri $1;
            set $oip $server_addr;
            if ($HTTP_X_Forwarded_For ~ "(^,]),*")  {
                set $oip $1;
            }

            if ($arg_vod_live_path != "") {
                set $vod_path $arg_vod_live_path;
            }

            subs_filter_types */* application/vnd.apple.mpegurl;

            subs_filter "(.*\.ts).*" http://$oip$ts_uri/$1?$ts_args ir;
            set $ts_args mltag=$arg_mltag&platid=$arg_platid&splatid=$arg_splatid&geo=$arg_geo&path=$vod_path&proxy=$arg_proxy&vid=$arg_vid&liveid=$arg_liveid&cips=$arg_cips&vod_live_path=$vod_path;
        }

        location ~* _letv_drm/.*\.ts {
            root /letv/fet;
            error_page 404 = @404_NOT_FOUND;
        }

        location ~ ^/(.*)ver_00_(.*)\.m3u8$ {
            error_page 404 = @404_NOT_FOUND;

            gzip on;
            cpt_fmt on;
            include letv/security.conf;

            set $a "-";
            if ($arg_tag != "") {
                set $a  $arg_tag;
            }

            if ( $arg_snaptm != "") {
                rewrite ^/(.*).m3u8$ /snapimg/$1.mp4 last;
            }

            set $vod_path $arg_path;
            if ($arg_vod_live_path != "") {
                set $vod_path $arg_vod_live_path;
            }

            rewrite  ^/(.*)ver_00_(.*)\.m3u8$ /$1ver_00_$2.mp4?tss=ios break;
            more_set_headers "Content-Type: application/x-mpegURL";
            

            lts_for_log mltag=$arg_mltag&platid=$arg_platid&splatid=$arg_splatid&playid=$arg_playid&geo=$arg_geo&tag=$a&ch=$arg_ch&p1=$arg_p1&p2=$arg_p2&p3=$arg_p3&tss=$arg_tss&b=$arg_b&bf=$arg_bf&nlh=$arg_nlh&path=$vod_path&sign=$arg_sign&proxy=$arg_proxy&uuid=$arg_uuid&ntm=$arg_ntm&keyitem=$arg_keyitem&its=$arg_its&nkey2=$arg_nkey2&uid=$arg_uid&qos=$arg_qos&enckit=$arg_enckit&m3v=$arg_m3v&token=$arg_token&vid=$arg_vid&liveid=$arg_liveid&station=$arg_station&app_name=$arg_app_name&app_ver=$arg_app_ver&fcheck=$arg_fcheck&pantm=$arg_pantm&panuid=$arg_panuid&pantoken=$arg_pantoken&cips=$arg_cips&vod_live_path=$vod_path&ledituid=$arg_ledituid&leditcid=$arg_leditcid&leditcip=$arg_leditcip&leditfl=$arg_leditfl&leditafl=$arg_leditafl&ajax=$arg_ajax;

            encryption_m3u8_splatid 101 207 1401;
            newm3u8;
        }

        location ~ ^/(.*)_s_mp4/ver_00_(.*)\.ts$ {
            error_page 404 = @DRM_NEWTS_CACHE;

            root /letv/fet/scache;
            set $proxyed CACHE_HIT;
        }

        location ~ ^/(.*)ver_00_(.*)\.ts$ {
            error_page 404 = @NEWTS_CACHE;

            root /letv/fet/scache;
            include domains/acfun.conf;
            include letv/ts_security.conf;
            set $proxyed CACHE_HIT;
        }

        location @NEWTS_CACHE {
            error_page 404 = @404_NOT_FOUND;
            cpt_fmt on;
            set $proxyed LOCAL_HIT;

            newts;
        }

        location @DRM_NEWTS_CACHE {
            error_page 404 = @404_NOT_FOUND;

            cpt_fmt on;
            set $proxyed LOCAL_HIT;
            curl_subrequest /curl_subrequest /usr/local/etc/drm_cache_file.conf;
            newts;
        }

        location = /curl_subrequest {
            proxy_pass http://drmdb.go.letv.com/letv/cdn/drm;
        }

        location = /live/secure/tokens_veirfy {
            proxy_connect_timeout 1s;
            proxy_read_timeout    1s;
            proxy_send_timeout    1s;
            proxy_pass http://127.0.0.1:19890;
        }

        location ~ \-mp4.ts$ {
            rewrite ^/(.*)-mp4.ts$ /$1.mp4 last;
        }

        location ~ \-flv.ts$ {
            rewrite ^/(.*)-flv.ts$ /$1.flv last;
        }

        location ~ \.m3u8$ {
            include letv/security.conf;
            rewrite ^/(.*)\.m3u8$ /$1.$arg_video_type last;
        }

        location ~ ^/letvabcdeasktf {
            test_speed;
        }

      
        location / {
            index  nofile;
        }

        location ~ ^/qihu360_NOT_FOUND/ {
            add_header Powered-By-Watchdog MISS-$hostname;
            rewrite ^/qihu360_NOT_FOUND/(.*) /$1 break;
            watchdog      on;
            proxy_pass http://gslb.coop.letv.com;
        }

        location ~ ^/[0-9]+/[0-9]+/[0-9]+/qihu360/ {
            set $limit_rate 4096k;
            error_page 404 = @404_NOT_FOUND;    
            expires    365d;
            root /letv/fet;
            rewrite ^/(.*)\.letv$ /$1.$arg_video_type last;
            include letv/security.conf;
        }

        location = /config_version {
            return 200 "LeCloud Cdn Cache V2.43";
        }

        location = /crossdomain.xml {
            expires  365d;
            crossdomain;
        }

        location ~ ^/(.*)_s\.letv$ {
            return 403;
        }

        location ~ \.letv$ {
            include domains/acfun.conf;
            rewrite ^/(.*)\.letv$ /$1.$arg_video_type last;
        }

        location = /m3u8_version {
            m3u8_version;
        }

        location ~ ^/video2/iphone {
            include letv/security.conf;
            rewrite ^/video2/(.*) /video/$1;

            set $a "-";
            if ($arg_tag != "") {
                set $a  $arg_tag;
            }

            set $mltag "";
            if ($arg_mltag != "") {
                set $mltag "?mltag=$arg_mltag";
            }

            subs_filter_types  */* application/x-mpegURL;
            subs_filter (.*\.ts) $1$mltag ir;

            ts_for_log mltag=$arg_mltag&platid=$arg_platid&splatid=$arg_splatid&playid=$arg_playid&tag=$a&geo=$arg_geo&ch=$arg_ch&tss=$arg_tss&p1=$arg_p1&p2=$arg_p2&p3=$arg_p3&b=$arg_b&bf=$arg_bf&nlh=$arg_nlh&proxy=$arg_proxy&path=$arg_path&uuid=$arg_uuid&ntm=$arg_ntm&keyitem=$arg_keyitem&its=$arg_its&nkey2=$arg_nkey2&uid=$arg_uid&qos=$arg_qos&enckit=$arg_enckit&token=$arg_token&fcheck=$arg_fcheck;

            first_vtime 10;
            second_vtime 10;
            ave_vtime 10;
            add_header Powered-By-Watchdog HIT-$hostname;
            expires  365d;
            video;
        }

        location ~ ^/video/iphone  {
            include letv/security.conf;
            add_header Powered-By-Watchdog HIT-$hostname;
            expires  365d;

            set $a "-";

            if ($arg_tag != "") {
                set $a  $arg_tag;
            }
            set $mltag "";
            if ($arg_mltag != "") {
                set $mltag "?mltag=$arg_mltag";
            } 

            subs_filter_types  */* application/x-mpegURL;
            subs_filter (.*\.ts) $1$mltag ir;

            ts_for_log mltag=$arg_mltag&platid=$arg_platid&splatid=$arg_splatid&playid=$arg_playid&tag=$a&tss=$arg_tss&geo=$arg_geo&ch=$arg_ch&p1=$arg_p1&p2=$arg_p2&p3=$arg_p3&b=$arg_b&bf=$arg_bf&nlh=$arg_nlh&proxy=$arg_proxy&path=$arg_path&uuid=$arg_uuid&ntm=$arg_ntm&keyitem=$arg_keyitem&its=$arg_its&nkey2=$arg_nkey2&uid=$arg_uid&qos=$arg_qos&enckit=$arg_enckit&token=$arg_token&fcheck=$arg_fcheck;

            video;
        }

        location ~ ^/.+/video/ts-([0-9]*)-([0-9]*)-0-0 {
            rewrite ^/.+/video/(.*) /video/$1?$decode_arg last;
        }

        location ~ ^/video/  {
            error_page 404 = @404_NOT_FOUND;
            expires           365d;
            video;
            break;
        }

        location ~ ^/MP4/  {
            if ($arg_playid = "2") {
                set $mp4_flag "${mp4_flag}1";
            }

            rewrite ^/MP4/(.*)$ /MP41/$1 last;
        }
        
        location @410_LETV_MP4 {
            set $limit_rate 4096k;
            if ($arg_limit_rate) {
                set $limit_rate $arg_limit_rate;
            }
            
            mp4;
        }

        location ~ ^/NEWMP4/ {
            error_page 404 = @404_NOT_FOUND;
            error_page 410 = @410_LETV_MP4;
            set $limit_rate 4096k;
            set $spd "OK";

            if ($request_uri ~ aa7f2e([0-9]+)){
                set $limit_rate         $1k;
            }

            if ($arg_splatid = "101") {
                set $spd "NOTOK";
            }

            if ($arg_rend = "524288") {
                set $spd "OK";
            }

            if ($spd = "NOTOK") {
                return 403;
            }

            set $test_rate_var 0;

            if ($arg_tss = "no") {
                set $test_rate_var "${test_rate_var}1";
	    }

            if ($arg_playid = "0") {
                set $test_rate_var "${test_rate_var}2";
	    }

            if ($arg_video_type = "mp4") {
                set $test_rate_var "${test_rate_var}3";
            }

            if ($test_rate_var = "0123") {
                set $limit_rate 0k;
            }

            set $newmp4_flag 0;

            if ($arg_playid = "2") {
                set $newmp4_flag "${newmp4_flag}1";
            }

            if ($blacklist_check) {
                set $newmp4_flag "${newmp4_flag}2";
            }

            if ($newmp4_flag = "012") {
                rewrite ^/NEWMP4(/.*)$ http://$blacklist_dst_ip:443$1?$args&rangex=$newmp4_flag? redirect;
            }

            root /letv/fet;
            include letv/security.conf;

            rewrite ^/NEWMP4/(.*)$ /$1;

            add_header Powered-By-Watchdog HIT-$hostname;
            expires           365d;

            if ($arg_begin != "") {
                return 410;
            }

            if ($arg_stop != "") {
                return 410;
            } 

            if ($arg_its != "") {
                newmp4_its_for_range;
                break;
            }

            if ($arg_its = "") { 
                return 410;
            }
        }

        location ~ ^/MP41/ {
            error_page 415 = @MP41_415;
            set $test_rate_var 0;

            if ($arg_tss = "no") {
                set $test_rate_var "${test_rate_var}1";
            }

            if ($arg_playid = "0") {
                set $test_rate_var "${test_rate_var}2";
            }

            if ($arg_video_type = "mp4") {
                set $test_rate_var "${test_rate_var}3";
            }

            if ($test_rate_var = "0123") {
                set $limit_rate 0k;
            }

            root /letv/fet;

            rewrite ^/MP41/(.*)$ /$1  break;

            mp4;

            add_header Powered-By-Watchdog HIT-$hostname;
            expires           365d;
        }

        location @MP41_415 {
            root /letv/fet;
            add_header Powered-By-Watchdog HIT-$hostname;
            expires           365d;
        }

 
        location ~ ^/FLV/  {
            set $limit_rate 4096k;

            rewrite ^/FLV/(.*)$ /FLV1/$1 last;
        }

        location ~ ^/FLV1/  {
            set $limit_rate  4096k;

            set $test_rate_var 0;

            if ($arg_tss = "no") {
                set $test_rate_var "${test_rate_var}1";
            }

            if ($arg_playid = "0") {
                set $test_rate_var "${test_rate_var}2";
            }

            if ($arg_video_type = "flv") {
                set $test_rate_var "${test_rate_var}3";
            }

            if ($test_rate_var = "0123") {
                set $limit_rate 0k;	
	    }

            root /letv/fet;
            include letv/security.conf;
    
            rewrite ^/FLV1/(.*)$ /$1 ;
            add_header Powered-By-Watchdog HIT-$hostname;
            more_set_headers "Access-Control-Allow-Origin: $var_acao_hdr";
            expires      365d;

            if ($arg_start_time != "") {
                flv_mp4_streaming;
                break;
            }

            if ($arg_begin != "") {
                flv_mp4_streaming;
                break;
            }

            flv;
            break; 
        }

        location ~ ^/NginxStatus/ {
            access_log       off;
            stub_status      on;
            header_filter_by_lua '
                local status_report = ngx.shared.status_report
                local status_data_keys = {"local_ips", "nband", "hband", "ngx_stat_writing", "load", "wget", "pull_num", "push_num"}
                local status_data_vals = { }

                for _, key in ipairs(status_data_keys) do
                    local val = status_report:get(key)
                    val = (val and val) or 0
                    table.insert(status_data_vals, val)
                end

                ngx.header.NGX_STATUS = table.concat(status_data_vals, ",")	
            ';
        }



        location ~* ^/snapimg/ {
            error_page 404 = @404_NOT_FOUND;
            root /letv/fet;
            internal;
            set $action "snapimg/" ;
            set $CACHE_HIT "-";

            rewrite ^/snapimg/(.*)$ /$1 break;
            flv_mp4_snapimg;
        }



        location @LECLUDE{
             error_page 404 = @404_NOT_FOUND;
             add_header Content-Disposition "attachment;filename=$arg_fname_gbk;filename*=UTF-8''$arg_fname";
        }

        location ~* _letv_drm/stream.mpd {
              error_page 404 = @404_NOT_FOUND;
              mpd;             
        }

        location @404_403_NOT_FOUND {
            error_page 404 = @404_NOT_FOUND;
            include letv/security.conf; 
            return 404;
        }

        location ~* ^/(.*)$ {
            include domains/acfun.conf;
            set $lecloude "yes";
            error_page 404 = @404_403_NOT_FOUND;
            error_page 401 = @LECLUDE;
            set $proxyed HIT;

            if ($arg_platid != "14") {
                set $lecloude "no";
            }

            if ($arg_splatid != "1400") {
                set $lecloude "no";
            }

            if ($arg_tss = "ios") {
                set $lecloude "no";
            }

            if ($arg_tvts = "ios") {
                set $lecloude "no";
            }

            if ($lecloude = "yes") {
                return 401;
            }

            if ( !-e $request_filename) {
                return 404;
            }

            if ( $arg_snaptm != "") {
                rewrite ^/(.*)$ /snapimg/$1 last;
            }

            if ($request_uri ~* ver_00_(.*)tss=ios) {
                rewrite ^/(.*)\.mp4$ /$1.m3u8 last;
            }

            if ($request_uri ~* ver_00_(.*)tss=audio) {
                rewrite ^/(.*)\.mp4$ /$1.m3u8 last;
            }

            if ($request_uri ~* ver_00_(.*)tss=tvts) {
                rewrite ^/(.*)\.mp4$ /$1.m3u8 last;
            }

            if ($uri ~* "acloud-cts/133730/v1.cztv.com") {
                return 403;
            }

            if ($uri ~* ver_00_(.*)\.mp4$) {
                rewrite ^/(.*)$ /NEWMP4/$1 last;
            }

            if ( $args ~* =ios ) {
                rewrite ^/(.*)$ /video/iphone/$1 last;
            }

            if ( $args ~* =tvts  ) {
                rewrite ^/(.*)$ /video2/iphone/$1?first_vtime=10&second_vtime=10&ave_vtime=10 last;
            }

            if ( $request_filename ~* "\.flv$") {
                rewrite ^/(.*)$ /FLV/$1 last;
            }
            
            if ( $request_filename ~* "\.fhv$") {
                rewrite ^/(.*)$ /FLV/$1 last;
            }

            if ($request_filename ~* "\.mp4$") {
                rewrite ^/(.*)$ /MP4/$1 last;
            }

            include letv/lecloudsecurity.conf;
          }
    }

    # commercial cdn config 
    include opscfg/ops_*.conf;
    include vhosts/server_*.conf;
    include clives/server_*.conf;
    include domains/aipai_com.conf;
    include domains/baomihua_com.conf;
    include domains/vlook_cn.conf;
    include domains/ucloud_com_cn.conf;
    include domains/upuday_com.conf;
    include domains/letv_cto.conf;
    include domains/lizhi_fm.conf;
    include domains/huan_tv.conf;
    include domains/wasu.conf;
    include domains/hntv.conf;
    include domains/qiniu.conf;
    include domains/clive.conf;
    include domains/clive_app.conf;
    include domains/clouddn.conf;
    include domains/panda_tv.conf;
    include domains/popcorn_com.conf;
    include domains/cutv.conf;
    include domains/starschinalive.conf;
    include domains/atianqi.conf;
    include domains/tvesou.conf;
    include domains/m1905.conf;
    include domains/readtv.conf;
    include domains/cuctv.conf;
    include domains/wdjcdn.conf;
    include domains/open.conf;
    include domains/general_hls.conf;
    include domains/souhu.conf;
    include domains/influxdb.conf;
    include domains/icntv.conf;
    include domains/tuyoo_com.conf;
}
